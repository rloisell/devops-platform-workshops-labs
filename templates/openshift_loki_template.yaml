apiVersion: v1
kind: Template
metadata:
  name: loki-template
parameters:
  - name: NAME
    value: loki
objects:
  - apiVersion: v1
    stringData:
      loki.yaml: |-
        auth_enabled: false
        chunk_store_config:
          max_look_back_period: 0
        ingester:
          chunk_block_size: 262144
          chunk_idle_period: 3m
          chunk_retain_period: 1m
          lifecycler:
            ring:
              kvstore:
                store: inmemory
              replication_factor: 1
        limits_config:
          enforce_metric_name: false
          reject_old_samples: true
          reject_old_samples_max_age: 168h
        schema_config:
          configs:
          - from: 2018-04-15
            index:
              period: 168h
              prefix: index_
            object_store: filesystem
            schema: v9
            store: boltdb
        server:
          http_listen_port: 3100
        storage_config:
          boltdb:
            directory: /data/loki/index
          filesystem:
            directory: /data/loki/chunks
        table_manager:
          retention_deletes_enabled: false
          retention_period: 0
    kind: Secret
    type: Opaque
    metadata:
      annotations: {}
      labels:
        app: ${NAME}
        chart: loki-0.16.0
        heritage: Tiller
        release: ${NAME}
      name: ${NAME}
  - apiVersion: v1
    kind: Service
    spec:
      ports:
        - name: http-metrics
          port: 3100
          protocol: TCP
          targetPort: http-metrics
      selector:
        app: ${NAME}
        release: ${NAME}
      sessionAffinity: None
      type: ClusterIP
    metadata:
      annotations: {}
      labels:
        app: ${NAME}
        chart: loki-0.16.0
        heritage: Tiller
        release: ${NAME}
      name: ${NAME}-headless
  - apiVersion: v1
    kind: Service
    spec:
      ports:
        - name: http-metrics
          port: 3100
          protocol: TCP
          targetPort: http-metrics
      selector:
        app: ${NAME}
        release: ${NAME}
      sessionAffinity: None
      type: ClusterIP
    metadata:
      annotations: {}
      labels:
        app: ${NAME}
        chart: loki-0.16.0
        heritage: Tiller
        release: ${NAME}
      name: ${NAME}
  - apiVersion: apps/v1
    kind: StatefulSet
    spec:
      podManagementPolicy: OrderedReady
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: ${NAME}
          release: ${NAME}
      serviceName: ${NAME}-headless
      template:
        metadata:
          annotations:
            checksum/config: 1a1db42c74b23fa57b31058016b0d6d279b0bd0dc39493d37569d18455c4e60d
            prometheus.io/port: http-metrics
            prometheus.io/scrape: 'true'
          creationTimestamp: null
          labels:
            app: ${NAME}
            name: loki
            release: ${NAME}
        spec:
          affinity: {}
          containers:
            - args:
                - '-config.file=/etc/loki/loki.yaml'
              image: 'grafana/loki:v0.3.0'
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /ready
                  port: http-metrics
                  scheme: HTTP
                initialDelaySeconds: 45
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              name: loki
              ports:
                - containerPort: 3100
                  name: http-metrics
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /ready
                  port: http-metrics
                  scheme: HTTP
                initialDelaySeconds: 45
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources: {}
              securityContext:
                readOnlyRootFilesystem: true
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/loki
                  name: config
                - mountPath: /data
                  name: storage
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          volumes:
            - name: config
              secret:
                defaultMode: 420
                secretName: ${NAME}
            - emptyDir: {}
              name: storage
      updateStrategy:
        type: RollingUpdate
    metadata:
      annotations: {}
      generation: 2
      labels:
        app: ${NAME}
        chart: loki-0.16.0
        heritage: Tiller
        release: ${NAME}
      name: ${NAME}
